<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>cvc4</string>
	</array>
	<key>name</key>
	<string>CVC4</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#command</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type_decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type_def</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#datatype_def</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#symbol_def_or_decl</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arith_consts</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)(\.\d*)\s*/\s*[1-9]\d*(\.\d*)</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)\s*/\s*[1-9]\d*(\.\d*)</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)(\.\d*)\s*/\s*[1-9]\d*</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)\s*(/\s*0(\.0*)?)\b</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)\s*/\s*[1-9]\d*\b</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0|[1-9]\d*)(\.\d*|\b)</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
			</array>
		</dict>
		<key>command</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(CONTINUE|COUNTEREXAMPLE|COUNTERMODEL|POP|PUSH|WHERE)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Commands with no arguments.</string>
					<key>end</key>
					<string>;</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bOPTION\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>end</key>
							<string>"</string>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#integer</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(ECHO|INCLUDE|TRACE|UNTRACE)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>end</key>
							<string>"</string>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bPOPTO\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#integer</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(ASSERT|QUERY|RESTART|PRINT|TRANSFORM)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>match</key>
			<string>%.*</string>
			<key>name</key>
			<string>comment.cvc4</string>
		</dict>
		<key>datatype_def</key>
		<dict>
			<key>begin</key>
			<string>\b(DATATYPE)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The last line can end with a ','. So we match for an optional 'END'.</string>
			<key>end</key>
			<string>(END)?;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z]\w*)\s*((\[)\s*([a-zA-Z]\w*)(\s*(,)\s*([a-zA-Z]\w*))*\s*(\]))?\s*=</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type.cvc4</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>A declaration finishes either by ',' or 'END'.</string>
					<key>end</key>
					<string>(,|(END)){1,1}?</string>
					<key>endCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#datatype_def_cij</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>datatype_def_cij</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z]\w*)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Constructor.</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier_colored_colon</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>Constant symbol.</string>
					<key>match</key>
					<string>\b[a-zA-Z]\w*\b</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
			</array>
		</dict>
		<key>equal_fail</key>
		<dict>
			<key>match</key>
			<string>=</string>
			<key>name</key>
			<string>invalid.cvc4</string>
		</dict>
		<key>expr</key>
		<dict>
			<key>comment</key>
			<string>A lambda or something else.</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\bLAMBDA\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Actually, just the signature of a lambda.</string>
					<key>end</key>
					<string>\)\s*:</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>constant.other.cvc4</string>
								</dict>
							</dict>
							<key>end</key>
							<string>,|(?=\))</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>constant.other.cvc4</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#type</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifiers_colored_colon</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expr_sub</string>
				</dict>
			</array>
		</dict>
		<key>expr_sub</key>
		<dict>
			<key>comment</key>
			<string>Anything but a lambda.</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#arith_consts</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Common operators.</string>
					<key>match</key>
					<string>\b(AND|OR|NOT|IF|THEN|ELSE|ELSIF|ENDIF)\b|:=</string>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bLET\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Let binding.</string>
					<key>end</key>
					<string>\bIN\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier_colored_equal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(FORALL|EXISTS)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Forall / exists.</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>constant.other.cvc4</string>
								</dict>
							</dict>
							<key>end</key>
							<string>,|(?=\))</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>constant.other.cvc4</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#type</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifiers_colored_colon</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bPATTERN\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Instantiation patterns.</string>
					<key>end</key>
					<string>:</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z]\w*)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Function application.</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier_colored_colon</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>Update.</string>
					<key>match</key>
					<string>\bWITH\b</string>
					<key>name</key>
					<string>constant.other.cvc4</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Other parts of an update.</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z]\w*)\s*(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Selection.</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier_colored_colon</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Record construction.</string>
					<key>end</key>
					<string>#\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier_colored_colon</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>Record selection.</string>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.numeric.cvc4</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expr_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>match</key>
			<string>\b[a-zA-Z]\w*\b</string>
		</dict>
		<key>identifier_colored</key>
		<dict>
			<key>match</key>
			<string>\b[a-zA-Z]\w*\b</string>
			<key>name</key>
			<string>constant.numeric.cvc4</string>
		</dict>
		<key>identifier_colored_colon</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.cvc4</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z]\w*)\s*:</string>
		</dict>
		<key>identifier_colored_equal</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.cvc4</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z]\w*)\s*=</string>
		</dict>
		<key>identifiers_colored_colon</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z]\w*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.cvc4</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Starts a symbol definition / declaration or a lambda signature.</string>
			<key>end</key>
			<string>:</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#identifier_colored</string>
				</dict>
			</array>
		</dict>
		<key>integer</key>
		<dict>
			<key>match</key>
			<string>\b(0|[1-9][0-9]*)\b</string>
			<key>name</key>
			<string>constant.other.cvc4</string>
		</dict>
		<key>semicolon_fail</key>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>invalid.cvc4</string>
		</dict>
		<key>symbol_def_expr_end</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;==)</string>
			<key>end</key>
			<string>(?=;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expr</string>
				</dict>
			</array>
		</dict>
		<key>symbol_def_or_decl</key>
		<dict>
			<key>begin</key>
			<string>\b(([a-zA-Z]\w*)(\s*,\s*[a-zA-Z]\w*)*)\s*:</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.cvc4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#symbol_def_or_decl_type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbol_def_expr_end</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier_colored</string>
				</dict>
			</array>
		</dict>
		<key>symbol_def_or_decl_type</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=:)</string>
			<key>end</key>
			<string>(=|(?=;)){1,1}?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>comment</key>
			<string>Color user types only at top level.</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_sub</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#user_type_colored</string>
				</dict>
			</array>
		</dict>
		<key>type_decl</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.cvc4</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.type.cvc4</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>User-defined basic types.</string>
			<key>match</key>
			<string>([a-zA-Z]\w*)(\s*(,)\s*([a-zA-Z]\w*))*\s*:\s*(TYPE)\s*;</string>
		</dict>
		<key>type_def</key>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z]\w*)\s*:\s*(TYPE)\s*=</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.cvc4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Type definitions.</string>
			<key>end</key>
			<string>;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#equal_fail</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#semicolon_fail</string>
				</dict>
			</array>
		</dict>
		<key>type_sub</key>
		<dict>
			<key>comment</key>
			<string>Actual types. User types appearing in parametric types are not colored.</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Primitive types.</string>
					<key>match</key>
					<string>\b(BOOLEAN|REAL|INT)\b</string>
					<key>name</key>
					<string>support.type.cvc4</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bBITVECTOR\s*\(</string>
					<key>comment</key>
					<string>Bitvectors.</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>support.type.cvc4</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#integer</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>Anything else is invalid.</string>
							<key>match</key>
							<string>[^\s\)]+</string>
							<key>name</key>
							<string>invalid.cvc4</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bARRAY\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Arrays.</string>
					<key>end</key>
					<string>\bOF\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([a-zA-Z]\w*)\s*(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Parametric types.</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_sub</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Records.</string>
					<key>end</key>
					<string>#\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier_colored_colon</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type_sub</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user_type</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Tuples.</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type_sub</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user_type</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>comment</key>
					<string>_ -&gt; _ functions, coloring only arrow. No begin, no end. Can't do better without tedious repetitions.</string>
					<key>match</key>
					<string>\-&gt;</string>
					<key>name</key>
					<string>keyword.cvc4</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>(_, _ [, _]*) -&gt; _ functions, lhs part. Also accepts (SomeType).</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type_sub</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user_type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>keyword.cvc4</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>user_type</key>
		<dict>
			<key>match</key>
			<string>\b[a-zA-Z]\w*\b</string>
		</dict>
		<key>user_type_colored</key>
		<dict>
			<key>match</key>
			<string>\b[a-zA-Z]\w*\b</string>
			<key>name</key>
			<string>support.type.cvc4</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>cvc</string>
	<key>uuid</key>
	<string>78cd77a2-17ef-40e5-a0fb-416644265f70</string>
</dict>
</plist>
